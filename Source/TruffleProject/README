HELP LINKS

System draft diagram: http://i.imgur.com/JD7ym6G.png
Exercise description: https://superdao.slack.com/files/ola/F0X8S3M17/Collaborative_Excercise
Legend: https://superdao.slack.com/files/ola/F0Y5PAVJ7/Diagram__Legend_Explanation

Tutorial for similar system implementation: https://docs.erisindustries.com/tutorials/solidity/solidity-2/

CURRENT STATE

Apr 12, 2016
There are contracts files for part of the system (Base Contracts D in the diagram) with some skeleton code in the "contracts" forlder of the Truffle instance. No JS code to use them and no Front-End.

Apr 16, 2016
There are base contracts (D in the diagram) and test case contracts, which use the system (Math.sol, MathAddAction.sol). 

TODO

1. A better systems for making “Calls” to contracts registered with Doug: Action.sol, ActionsManager.sol method execute, Math.sol method add.
2. Use Grove DB lib in ActionsDB.sol and DougDB.sol. Data structures for actions and contracts. Also DS for list for DougDB._getAll().
3. Implementation for Doug.switchDoug() (depends on 1.). 
4. Review Doug.sol: contracts' relations, so they can be separated into three files. 
5. Just model the use of a permissions system without implementation.
6. Updated solidity syntaxes where possible, ie possible usage of (new contract)() , self destruct, libraries etc..

WORK SUMMARY

Boris created the repo and Windows install scripts for basic setup of git, node, truffle, etc.
Zlatinov create base contracts (D in the diagram), the system design and relations between the contracts.
Panos added his library to the project: https://github.com/Superdao-DAO/solidity-helpers-util
Panos created the ActionsManager.execute implementation after researching a variaty of possible implementations.
Archil tested and reviewed the contracts.
Zlatinov outlined an alternative way to transfer input and output data between calee and action in alternative-execute branch: https://github.com/Superdao-DAO/Team3-DevRepo/tree/alternative-execute
Boris and Archil are researching on how to use Grove DB.